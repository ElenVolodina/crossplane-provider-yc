/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ServiceAccountApiKeyObservation struct {
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	EncryptedSecretKey *string `json:"encryptedSecretKey,omitempty" tf:"encrypted_secret_key,omitempty"`

	KeyFingerprint *string `json:"keyFingerprint,omitempty" tf:"key_fingerprint,omitempty"`
}

type ServiceAccountApiKeyParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	PgpKey *string `json:"pgpKey,omitempty" tf:"pgp_key,omitempty"`

	// +kubebuilder:validation:Required
	ServiceAccountID *string `json:"serviceAccountId" tf:"service_account_id,omitempty"`
}

// ServiceAccountApiKeySpec defines the desired state of ServiceAccountApiKey
type ServiceAccountApiKeySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceAccountApiKeyParameters `json:"forProvider"`
}

// ServiceAccountApiKeyStatus defines the observed state of ServiceAccountApiKey.
type ServiceAccountApiKeyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceAccountApiKeyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceAccountApiKey is the Schema for the ServiceAccountApiKeys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloudjet}
type ServiceAccountApiKey struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceAccountApiKeySpec   `json:"spec"`
	Status            ServiceAccountApiKeyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceAccountApiKeyList contains a list of ServiceAccountApiKeys
type ServiceAccountApiKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceAccountApiKey `json:"items"`
}

// Repository type metadata.
var (
	ServiceAccountApiKey_Kind             = "ServiceAccountApiKey"
	ServiceAccountApiKey_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceAccountApiKey_Kind}.String()
	ServiceAccountApiKey_KindAPIVersion   = ServiceAccountApiKey_Kind + "." + CRDGroupVersion.String()
	ServiceAccountApiKey_GroupVersionKind = CRDGroupVersion.WithKind(ServiceAccountApiKey_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceAccountApiKey{}, &ServiceAccountApiKeyList{})
}
