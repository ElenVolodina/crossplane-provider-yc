//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AltNamesObservation) DeepCopyInto(out *AltNamesObservation) {
	*out = *in
	if in.FromName != nil {
		in, out := &in.FromName, &out.FromName
		*out = new(string)
		**out = **in
	}
	if in.ToName != nil {
		in, out := &in.ToName, &out.ToName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AltNamesObservation.
func (in *AltNamesObservation) DeepCopy() *AltNamesObservation {
	if in == nil {
		return nil
	}
	out := new(AltNamesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AltNamesParameters) DeepCopyInto(out *AltNamesParameters) {
	*out = *in
	if in.FromName != nil {
		in, out := &in.FromName, &out.FromName
		*out = new(string)
		**out = **in
	}
	if in.ToName != nil {
		in, out := &in.ToName, &out.ToName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AltNamesParameters.
func (in *AltNamesParameters) DeepCopy() *AltNamesParameters {
	if in == nil {
		return nil
	}
	out := new(AltNamesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditTrailsV1ParserObservation) DeepCopyInto(out *AuditTrailsV1ParserObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditTrailsV1ParserObservation.
func (in *AuditTrailsV1ParserObservation) DeepCopy() *AuditTrailsV1ParserObservation {
	if in == nil {
		return nil
	}
	out := new(AuditTrailsV1ParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditTrailsV1ParserParameters) DeepCopyInto(out *AuditTrailsV1ParserParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditTrailsV1ParserParameters.
func (in *AuditTrailsV1ParserParameters) DeepCopy() *AuditTrailsV1ParserParameters {
	if in == nil {
		return nil
	}
	out := new(AuditTrailsV1ParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthNoAuthObservation) DeepCopyInto(out *AuthNoAuthObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthNoAuthObservation.
func (in *AuthNoAuthObservation) DeepCopy() *AuthNoAuthObservation {
	if in == nil {
		return nil
	}
	out := new(AuthNoAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthNoAuthParameters) DeepCopyInto(out *AuthNoAuthParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthNoAuthParameters.
func (in *AuthNoAuthParameters) DeepCopy() *AuthNoAuthParameters {
	if in == nil {
		return nil
	}
	out := new(AuthNoAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthObservation) DeepCopyInto(out *AuthObservation) {
	*out = *in
	if in.NoAuth != nil {
		in, out := &in.NoAuth, &out.NoAuth
		*out = make([]NoAuthParameters, len(*in))
		copy(*out, *in)
	}
	if in.Sasl != nil {
		in, out := &in.Sasl, &out.Sasl
		*out = make([]SaslObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthObservation.
func (in *AuthObservation) DeepCopy() *AuthObservation {
	if in == nil {
		return nil
	}
	out := new(AuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthParameters) DeepCopyInto(out *AuthParameters) {
	*out = *in
	if in.NoAuth != nil {
		in, out := &in.NoAuth, &out.NoAuth
		*out = make([]NoAuthParameters, len(*in))
		copy(*out, *in)
	}
	if in.Sasl != nil {
		in, out := &in.Sasl, &out.Sasl
		*out = make([]SaslParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthParameters.
func (in *AuthParameters) DeepCopy() *AuthParameters {
	if in == nil {
		return nil
	}
	out := new(AuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSaslObservation) DeepCopyInto(out *AuthSaslObservation) {
	*out = *in
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]AuthSaslPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSaslObservation.
func (in *AuthSaslObservation) DeepCopy() *AuthSaslObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSaslObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSaslParameters) DeepCopyInto(out *AuthSaslParameters) {
	*out = *in
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]AuthSaslPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSaslParameters.
func (in *AuthSaslParameters) DeepCopy() *AuthSaslParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSaslParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSaslPasswordObservation) DeepCopyInto(out *AuthSaslPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSaslPasswordObservation.
func (in *AuthSaslPasswordObservation) DeepCopy() *AuthSaslPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSaslPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSaslPasswordParameters) DeepCopyInto(out *AuthSaslPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSaslPasswordParameters.
func (in *AuthSaslPasswordParameters) DeepCopy() *AuthSaslPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSaslPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseSourceObservation) DeepCopyInto(out *ClickhouseSourceObservation) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]ConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseSourceObservation.
func (in *ClickhouseSourceObservation) DeepCopy() *ClickhouseSourceObservation {
	if in == nil {
		return nil
	}
	out := new(ClickhouseSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseSourceParameters) DeepCopyInto(out *ClickhouseSourceParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]ConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseSourceParameters.
func (in *ClickhouseSourceParameters) DeepCopy() *ClickhouseSourceParameters {
	if in == nil {
		return nil
	}
	out := new(ClickhouseSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseTargetConnectionObservation) DeepCopyInto(out *ClickhouseTargetConnectionObservation) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]ConnectionConnectionOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseTargetConnectionObservation.
func (in *ClickhouseTargetConnectionObservation) DeepCopy() *ClickhouseTargetConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ClickhouseTargetConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseTargetConnectionParameters) DeepCopyInto(out *ClickhouseTargetConnectionParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]ConnectionConnectionOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseTargetConnectionParameters.
func (in *ClickhouseTargetConnectionParameters) DeepCopy() *ClickhouseTargetConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ClickhouseTargetConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseTargetObservation) DeepCopyInto(out *ClickhouseTargetObservation) {
	*out = *in
	if in.AltNames != nil {
		in, out := &in.AltNames, &out.AltNames
		*out = make([]AltNamesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.ClickhouseClusterName != nil {
		in, out := &in.ClickhouseClusterName, &out.ClickhouseClusterName
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]ClickhouseTargetConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Sharding != nil {
		in, out := &in.Sharding, &out.Sharding
		*out = make([]ShardingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseTargetObservation.
func (in *ClickhouseTargetObservation) DeepCopy() *ClickhouseTargetObservation {
	if in == nil {
		return nil
	}
	out := new(ClickhouseTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseTargetParameters) DeepCopyInto(out *ClickhouseTargetParameters) {
	*out = *in
	if in.AltNames != nil {
		in, out := &in.AltNames, &out.AltNames
		*out = make([]AltNamesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.ClickhouseClusterName != nil {
		in, out := &in.ClickhouseClusterName, &out.ClickhouseClusterName
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]ClickhouseTargetConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Sharding != nil {
		in, out := &in.Sharding, &out.Sharding
		*out = make([]ShardingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseTargetParameters.
func (in *ClickhouseTargetParameters) DeepCopy() *ClickhouseTargetParameters {
	if in == nil {
		return nil
	}
	out := new(ClickhouseTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudLoggingParserObservation) DeepCopyInto(out *CloudLoggingParserObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudLoggingParserObservation.
func (in *CloudLoggingParserObservation) DeepCopy() *CloudLoggingParserObservation {
	if in == nil {
		return nil
	}
	out := new(CloudLoggingParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudLoggingParserParameters) DeepCopyInto(out *CloudLoggingParserParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudLoggingParserParameters.
func (in *CloudLoggingParserParameters) DeepCopy() *CloudLoggingParserParameters {
	if in == nil {
		return nil
	}
	out := new(CloudLoggingParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectionsObservation) DeepCopyInto(out *CollectionsObservation) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectionsObservation.
func (in *CollectionsObservation) DeepCopy() *CollectionsObservation {
	if in == nil {
		return nil
	}
	out := new(CollectionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectionsParameters) DeepCopyInto(out *CollectionsParameters) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectionsParameters.
func (in *CollectionsParameters) DeepCopy() *CollectionsParameters {
	if in == nil {
		return nil
	}
	out := new(CollectionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnValueHashObservation) DeepCopyInto(out *ColumnValueHashObservation) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnValueHashObservation.
func (in *ColumnValueHashObservation) DeepCopy() *ColumnValueHashObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnValueHashObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnValueHashParameters) DeepCopyInto(out *ColumnValueHashParameters) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnValueHashParameters.
func (in *ColumnValueHashParameters) DeepCopy() *ColumnValueHashParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnValueHashParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsObservation) DeepCopyInto(out *ConnectionConnectionOptionsObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionOptionsOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]ConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsObservation.
func (in *ConnectionConnectionOptionsObservation) DeepCopy() *ConnectionConnectionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseObservation) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ReplicaSet != nil {
		in, out := &in.ReplicaSet, &out.ReplicaSet
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionOptionsOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseObservation.
func (in *ConnectionConnectionOptionsOnPremiseObservation) DeepCopy() *ConnectionConnectionOptionsOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ReplicaSet != nil {
		in, out := &in.ReplicaSet, &out.ReplicaSet
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionOptionsOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseParameters.
func (in *ConnectionConnectionOptionsOnPremiseParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeObservation) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeObservation.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeObservation) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeParameters.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsParameters) DeepCopyInto(out *ConnectionConnectionOptionsParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionOptionsOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]ConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsParameters.
func (in *ConnectionConnectionOptionsParameters) DeepCopy() *ConnectionConnectionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsPasswordObservation) DeepCopyInto(out *ConnectionConnectionOptionsPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsPasswordObservation.
func (in *ConnectionConnectionOptionsPasswordObservation) DeepCopy() *ConnectionConnectionOptionsPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsPasswordParameters) DeepCopyInto(out *ConnectionConnectionOptionsPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsPasswordParameters.
func (in *ConnectionConnectionOptionsPasswordParameters) DeepCopy() *ConnectionConnectionOptionsPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionObservation) DeepCopyInto(out *ConnectionObservation) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]ConnectionOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionObservation.
func (in *ConnectionObservation) DeepCopy() *ConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseObservation) DeepCopyInto(out *ConnectionOnPremiseObservation) {
	*out = *in
	if in.BrokerUrls != nil {
		in, out := &in.BrokerUrls, &out.BrokerUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseObservation.
func (in *ConnectionOnPremiseObservation) DeepCopy() *ConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseParameters) DeepCopyInto(out *ConnectionOnPremiseParameters) {
	*out = *in
	if in.BrokerUrls != nil {
		in, out := &in.BrokerUrls, &out.BrokerUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseParameters.
func (in *ConnectionOnPremiseParameters) DeepCopy() *ConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *ConnectionOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeDisabledObservation.
func (in *ConnectionOnPremiseTLSModeDisabledObservation) DeepCopy() *ConnectionOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *ConnectionOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeDisabledParameters.
func (in *ConnectionOnPremiseTLSModeDisabledParameters) DeepCopy() *ConnectionOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *ConnectionOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeEnabledObservation.
func (in *ConnectionOnPremiseTLSModeEnabledObservation) DeepCopy() *ConnectionOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *ConnectionOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeEnabledParameters.
func (in *ConnectionOnPremiseTLSModeEnabledParameters) DeepCopy() *ConnectionOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *ConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]OnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]OnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeObservation.
func (in *ConnectionOnPremiseTLSModeObservation) DeepCopy() *ConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *ConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]OnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]OnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeParameters.
func (in *ConnectionOnPremiseTLSModeParameters) DeepCopy() *ConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsObservation) DeepCopyInto(out *ConnectionOptionsObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]OnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsObservation.
func (in *ConnectionOptionsObservation) DeepCopy() *ConnectionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseObservation) DeepCopyInto(out *ConnectionOptionsOnPremiseObservation) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.NativePort != nil {
		in, out := &in.NativePort, &out.NativePort
		*out = new(float64)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]OnPremiseShardsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]OnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseObservation.
func (in *ConnectionOptionsOnPremiseObservation) DeepCopy() *ConnectionOptionsOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseParameters) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.NativePort != nil {
		in, out := &in.NativePort, &out.NativePort
		*out = new(float64)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]OnPremiseShardsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]OnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseParameters.
func (in *ConnectionOptionsOnPremiseParameters) DeepCopy() *ConnectionOptionsOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeDisabledObservation.
func (in *ConnectionOptionsOnPremiseTLSModeDisabledObservation) DeepCopy() *ConnectionOptionsOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeDisabledParameters.
func (in *ConnectionOptionsOnPremiseTLSModeDisabledParameters) DeepCopy() *ConnectionOptionsOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeEnabledObservation.
func (in *ConnectionOptionsOnPremiseTLSModeEnabledObservation) DeepCopy() *ConnectionOptionsOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeEnabledParameters.
func (in *ConnectionOptionsOnPremiseTLSModeEnabledParameters) DeepCopy() *ConnectionOptionsOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeObservation) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionOptionsOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionOptionsOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeObservation.
func (in *ConnectionOptionsOnPremiseTLSModeObservation) DeepCopy() *ConnectionOptionsOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionOptionsOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionOptionsOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeParameters.
func (in *ConnectionOptionsOnPremiseTLSModeParameters) DeepCopy() *ConnectionOptionsOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsParameters) DeepCopyInto(out *ConnectionOptionsParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]OnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsParameters.
func (in *ConnectionOptionsParameters) DeepCopy() *ConnectionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsPasswordObservation) DeepCopyInto(out *ConnectionOptionsPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsPasswordObservation.
func (in *ConnectionOptionsPasswordObservation) DeepCopy() *ConnectionOptionsPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsPasswordParameters) DeepCopyInto(out *ConnectionOptionsPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsPasswordParameters.
func (in *ConnectionOptionsPasswordParameters) DeepCopy() *ConnectionOptionsPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionParameters) DeepCopyInto(out *ConnectionParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]ConnectionOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionParameters.
func (in *ConnectionParameters) DeepCopy() *ConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaFieldsFieldsObservation) DeepCopyInto(out *DataSchemaFieldsFieldsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaFieldsFieldsObservation.
func (in *DataSchemaFieldsFieldsObservation) DeepCopy() *DataSchemaFieldsFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(DataSchemaFieldsFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaFieldsFieldsParameters) DeepCopyInto(out *DataSchemaFieldsFieldsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaFieldsFieldsParameters.
func (in *DataSchemaFieldsFieldsParameters) DeepCopy() *DataSchemaFieldsFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(DataSchemaFieldsFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaFieldsObservation) DeepCopyInto(out *DataSchemaFieldsObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]DataSchemaFieldsFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaFieldsObservation.
func (in *DataSchemaFieldsObservation) DeepCopy() *DataSchemaFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(DataSchemaFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaFieldsParameters) DeepCopyInto(out *DataSchemaFieldsParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]DataSchemaFieldsFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaFieldsParameters.
func (in *DataSchemaFieldsParameters) DeepCopy() *DataSchemaFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(DataSchemaFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaObservation) DeepCopyInto(out *DataSchemaObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaObservation.
func (in *DataSchemaObservation) DeepCopy() *DataSchemaObservation {
	if in == nil {
		return nil
	}
	out := new(DataSchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaParameters) DeepCopyInto(out *DataSchemaParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaParameters.
func (in *DataSchemaParameters) DeepCopy() *DataSchemaParameters {
	if in == nil {
		return nil
	}
	out := new(DataSchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisabledObservation) DeepCopyInto(out *DisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisabledObservation.
func (in *DisabledObservation) DeepCopy() *DisabledObservation {
	if in == nil {
		return nil
	}
	out := new(DisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisabledParameters) DeepCopyInto(out *DisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisabledParameters.
func (in *DisabledParameters) DeepCopy() *DisabledParameters {
	if in == nil {
		return nil
	}
	out := new(DisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledObservation) DeepCopyInto(out *EnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledObservation.
func (in *EnabledObservation) DeepCopy() *EnabledObservation {
	if in == nil {
		return nil
	}
	out := new(EnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledParameters) DeepCopyInto(out *EnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledParameters.
func (in *EnabledParameters) DeepCopy() *EnabledParameters {
	if in == nil {
		return nil
	}
	out := new(EnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Endpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointList) DeepCopyInto(out *EndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Endpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointList.
func (in *EndpointList) DeepCopy() *EndpointList {
	if in == nil {
		return nil
	}
	out := new(EndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointObservation) DeepCopyInto(out *EndpointObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointObservation.
func (in *EndpointObservation) DeepCopy() *EndpointObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointParameters) DeepCopyInto(out *EndpointParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointParameters.
func (in *EndpointParameters) DeepCopy() *EndpointParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpec) DeepCopyInto(out *EndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpec.
func (in *EndpointSpec) DeepCopy() *EndpointSpec {
	if in == nil {
		return nil
	}
	out := new(EndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointStatus) DeepCopyInto(out *EndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointStatus.
func (in *EndpointStatus) DeepCopy() *EndpointStatus {
	if in == nil {
		return nil
	}
	out := new(EndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedCollectionsObservation) DeepCopyInto(out *ExcludedCollectionsObservation) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedCollectionsObservation.
func (in *ExcludedCollectionsObservation) DeepCopy() *ExcludedCollectionsObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludedCollectionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedCollectionsParameters) DeepCopyInto(out *ExcludedCollectionsParameters) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedCollectionsParameters.
func (in *ExcludedCollectionsParameters) DeepCopy() *ExcludedCollectionsParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludedCollectionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsFieldsObservation) DeepCopyInto(out *FieldsFieldsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsFieldsObservation.
func (in *FieldsFieldsObservation) DeepCopy() *FieldsFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(FieldsFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsFieldsParameters) DeepCopyInto(out *FieldsFieldsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsFieldsParameters.
func (in *FieldsFieldsParameters) DeepCopy() *FieldsFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(FieldsFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsObservation) DeepCopyInto(out *FieldsObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsObservation.
func (in *FieldsObservation) DeepCopy() *FieldsObservation {
	if in == nil {
		return nil
	}
	out := new(FieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsParameters) DeepCopyInto(out *FieldsParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsParameters.
func (in *FieldsParameters) DeepCopy() *FieldsParameters {
	if in == nil {
		return nil
	}
	out := new(FieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserObservation) DeepCopyInto(out *JSONParserObservation) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]DataSchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserObservation.
func (in *JSONParserObservation) DeepCopy() *JSONParserObservation {
	if in == nil {
		return nil
	}
	out := new(JSONParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserParameters) DeepCopyInto(out *JSONParserParameters) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]DataSchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserParameters.
func (in *JSONParserParameters) DeepCopy() *JSONParserParameters {
	if in == nil {
		return nil
	}
	out := new(JSONParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSourceConnectionObservation) DeepCopyInto(out *KafkaSourceConnectionObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSourceConnectionObservation.
func (in *KafkaSourceConnectionObservation) DeepCopy() *KafkaSourceConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaSourceConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSourceConnectionParameters) DeepCopyInto(out *KafkaSourceConnectionParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSourceConnectionParameters.
func (in *KafkaSourceConnectionParameters) DeepCopy() *KafkaSourceConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaSourceConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSourceObservation) DeepCopyInto(out *KafkaSourceObservation) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make([]AuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]KafkaSourceConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.Transformer != nil {
		in, out := &in.Transformer, &out.Transformer
		*out = make([]TransformerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSourceObservation.
func (in *KafkaSourceObservation) DeepCopy() *KafkaSourceObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSourceParameters) DeepCopyInto(out *KafkaSourceParameters) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make([]AuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]KafkaSourceConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.Transformer != nil {
		in, out := &in.Transformer, &out.Transformer
		*out = make([]TransformerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSourceParameters.
func (in *KafkaSourceParameters) DeepCopy() *KafkaSourceParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetAuthObservation) DeepCopyInto(out *KafkaTargetAuthObservation) {
	*out = *in
	if in.NoAuth != nil {
		in, out := &in.NoAuth, &out.NoAuth
		*out = make([]AuthNoAuthParameters, len(*in))
		copy(*out, *in)
	}
	if in.Sasl != nil {
		in, out := &in.Sasl, &out.Sasl
		*out = make([]AuthSaslObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetAuthObservation.
func (in *KafkaTargetAuthObservation) DeepCopy() *KafkaTargetAuthObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetAuthParameters) DeepCopyInto(out *KafkaTargetAuthParameters) {
	*out = *in
	if in.NoAuth != nil {
		in, out := &in.NoAuth, &out.NoAuth
		*out = make([]AuthNoAuthParameters, len(*in))
		copy(*out, *in)
	}
	if in.Sasl != nil {
		in, out := &in.Sasl, &out.Sasl
		*out = make([]AuthSaslParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetAuthParameters.
func (in *KafkaTargetAuthParameters) DeepCopy() *KafkaTargetAuthParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionObservation) DeepCopyInto(out *KafkaTargetConnectionObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]KafkaTargetConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionObservation.
func (in *KafkaTargetConnectionObservation) DeepCopy() *KafkaTargetConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionOnPremiseObservation) DeepCopyInto(out *KafkaTargetConnectionOnPremiseObservation) {
	*out = *in
	if in.BrokerUrls != nil {
		in, out := &in.BrokerUrls, &out.BrokerUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]KafkaTargetConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionOnPremiseObservation.
func (in *KafkaTargetConnectionOnPremiseObservation) DeepCopy() *KafkaTargetConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionOnPremiseParameters) DeepCopyInto(out *KafkaTargetConnectionOnPremiseParameters) {
	*out = *in
	if in.BrokerUrls != nil {
		in, out := &in.BrokerUrls, &out.BrokerUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]KafkaTargetConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionOnPremiseParameters.
func (in *KafkaTargetConnectionOnPremiseParameters) DeepCopy() *KafkaTargetConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *KafkaTargetConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionOnPremiseTLSModeObservation.
func (in *KafkaTargetConnectionOnPremiseTLSModeObservation) DeepCopy() *KafkaTargetConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *KafkaTargetConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionOnPremiseTLSModeParameters.
func (in *KafkaTargetConnectionOnPremiseTLSModeParameters) DeepCopy() *KafkaTargetConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionParameters) DeepCopyInto(out *KafkaTargetConnectionParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]KafkaTargetConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionParameters.
func (in *KafkaTargetConnectionParameters) DeepCopy() *KafkaTargetConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetObservation) DeepCopyInto(out *KafkaTargetObservation) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make([]KafkaTargetAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]KafkaTargetConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = make([]SerializerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicSettings != nil {
		in, out := &in.TopicSettings, &out.TopicSettings
		*out = make([]TopicSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetObservation.
func (in *KafkaTargetObservation) DeepCopy() *KafkaTargetObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetParameters) DeepCopyInto(out *KafkaTargetParameters) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make([]KafkaTargetAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]KafkaTargetConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = make([]SerializerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicSettings != nil {
		in, out := &in.TopicSettings, &out.TopicSettings
		*out = make([]TopicSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetParameters.
func (in *KafkaTargetParameters) DeepCopy() *KafkaTargetParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceConnectionConnectionOptionsObservation) DeepCopyInto(out *MongoSourceConnectionConnectionOptionsObservation) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionConnectionOptionsOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]ConnectionConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceConnectionConnectionOptionsObservation.
func (in *MongoSourceConnectionConnectionOptionsObservation) DeepCopy() *MongoSourceConnectionConnectionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MongoSourceConnectionConnectionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceConnectionConnectionOptionsParameters) DeepCopyInto(out *MongoSourceConnectionConnectionOptionsParameters) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionConnectionOptionsOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]ConnectionConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceConnectionConnectionOptionsParameters.
func (in *MongoSourceConnectionConnectionOptionsParameters) DeepCopy() *MongoSourceConnectionConnectionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MongoSourceConnectionConnectionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceConnectionObservation) DeepCopyInto(out *MongoSourceConnectionObservation) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]MongoSourceConnectionConnectionOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceConnectionObservation.
func (in *MongoSourceConnectionObservation) DeepCopy() *MongoSourceConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(MongoSourceConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceConnectionParameters) DeepCopyInto(out *MongoSourceConnectionParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]MongoSourceConnectionConnectionOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceConnectionParameters.
func (in *MongoSourceConnectionParameters) DeepCopy() *MongoSourceConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(MongoSourceConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceObservation) DeepCopyInto(out *MongoSourceObservation) {
	*out = *in
	if in.Collections != nil {
		in, out := &in.Collections, &out.Collections
		*out = make([]CollectionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MongoSourceConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedCollections != nil {
		in, out := &in.ExcludedCollections, &out.ExcludedCollections
		*out = make([]ExcludedCollectionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPreferredMode != nil {
		in, out := &in.SecondaryPreferredMode, &out.SecondaryPreferredMode
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceObservation.
func (in *MongoSourceObservation) DeepCopy() *MongoSourceObservation {
	if in == nil {
		return nil
	}
	out := new(MongoSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceParameters) DeepCopyInto(out *MongoSourceParameters) {
	*out = *in
	if in.Collections != nil {
		in, out := &in.Collections, &out.Collections
		*out = make([]CollectionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MongoSourceConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedCollections != nil {
		in, out := &in.ExcludedCollections, &out.ExcludedCollections
		*out = make([]ExcludedCollectionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPreferredMode != nil {
		in, out := &in.SecondaryPreferredMode, &out.SecondaryPreferredMode
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceParameters.
func (in *MongoSourceParameters) DeepCopy() *MongoSourceParameters {
	if in == nil {
		return nil
	}
	out := new(MongoSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsObservation) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsObservation) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MongoTargetConnectionConnectionOptionsOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MongoTargetConnectionConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsObservation.
func (in *MongoTargetConnectionConnectionOptionsObservation) DeepCopy() *MongoTargetConnectionConnectionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsOnPremiseObservation) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ReplicaSet != nil {
		in, out := &in.ReplicaSet, &out.ReplicaSet
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsOnPremiseObservation.
func (in *MongoTargetConnectionConnectionOptionsOnPremiseObservation) DeepCopy() *MongoTargetConnectionConnectionOptionsOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsOnPremiseParameters) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ReplicaSet != nil {
		in, out := &in.ReplicaSet, &out.ReplicaSet
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsOnPremiseParameters.
func (in *MongoTargetConnectionConnectionOptionsOnPremiseParameters) DeepCopy() *MongoTargetConnectionConnectionOptionsOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsParameters) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsParameters) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MongoTargetConnectionConnectionOptionsOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MongoTargetConnectionConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsParameters.
func (in *MongoTargetConnectionConnectionOptionsParameters) DeepCopy() *MongoTargetConnectionConnectionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsPasswordObservation) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsPasswordObservation.
func (in *MongoTargetConnectionConnectionOptionsPasswordObservation) DeepCopy() *MongoTargetConnectionConnectionOptionsPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsPasswordParameters) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsPasswordParameters.
func (in *MongoTargetConnectionConnectionOptionsPasswordParameters) DeepCopy() *MongoTargetConnectionConnectionOptionsPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionObservation) DeepCopyInto(out *MongoTargetConnectionObservation) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]MongoTargetConnectionConnectionOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionObservation.
func (in *MongoTargetConnectionObservation) DeepCopy() *MongoTargetConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionParameters) DeepCopyInto(out *MongoTargetConnectionParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]MongoTargetConnectionConnectionOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionParameters.
func (in *MongoTargetConnectionParameters) DeepCopy() *MongoTargetConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetObservation) DeepCopyInto(out *MongoTargetObservation) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MongoTargetConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetObservation.
func (in *MongoTargetObservation) DeepCopy() *MongoTargetObservation {
	if in == nil {
		return nil
	}
	out := new(MongoTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetParameters) DeepCopyInto(out *MongoTargetParameters) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MongoTargetConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetParameters.
func (in *MongoTargetParameters) DeepCopy() *MongoTargetParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionObservation) DeepCopyInto(out *MySQLSourceConnectionObservation) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MySQLSourceConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionObservation.
func (in *MySQLSourceConnectionObservation) DeepCopy() *MySQLSourceConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseObservation) DeepCopyInto(out *MySQLSourceConnectionOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseObservation.
func (in *MySQLSourceConnectionOnPremiseObservation) DeepCopy() *MySQLSourceConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseParameters.
func (in *MySQLSourceConnectionOnPremiseParameters) DeepCopy() *MySQLSourceConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeDisabledObservation.
func (in *MySQLSourceConnectionOnPremiseTLSModeDisabledObservation) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeDisabledParameters.
func (in *MySQLSourceConnectionOnPremiseTLSModeDisabledParameters) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeEnabledObservation.
func (in *MySQLSourceConnectionOnPremiseTLSModeEnabledObservation) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeEnabledParameters.
func (in *MySQLSourceConnectionOnPremiseTLSModeEnabledParameters) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeObservation.
func (in *MySQLSourceConnectionOnPremiseTLSModeObservation) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeParameters.
func (in *MySQLSourceConnectionOnPremiseTLSModeParameters) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionParameters) DeepCopyInto(out *MySQLSourceConnectionParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MySQLSourceConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionParameters.
func (in *MySQLSourceConnectionParameters) DeepCopy() *MySQLSourceConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceObservation) DeepCopyInto(out *MySQLSourceObservation) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MySQLSourceConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.ExcludeTablesRegex != nil {
		in, out := &in.ExcludeTablesRegex, &out.ExcludeTablesRegex
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTablesRegex != nil {
		in, out := &in.IncludeTablesRegex, &out.IncludeTablesRegex
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectTransferSettings != nil {
		in, out := &in.ObjectTransferSettings, &out.ObjectTransferSettings
		*out = make([]ObjectTransferSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MySQLSourcePasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceDatabase != nil {
		in, out := &in.ServiceDatabase, &out.ServiceDatabase
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceObservation.
func (in *MySQLSourceObservation) DeepCopy() *MySQLSourceObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceParameters) DeepCopyInto(out *MySQLSourceParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MySQLSourceConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeTablesRegex != nil {
		in, out := &in.ExcludeTablesRegex, &out.ExcludeTablesRegex
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTablesRegex != nil {
		in, out := &in.IncludeTablesRegex, &out.IncludeTablesRegex
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectTransferSettings != nil {
		in, out := &in.ObjectTransferSettings, &out.ObjectTransferSettings
		*out = make([]ObjectTransferSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MySQLSourcePasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceDatabase != nil {
		in, out := &in.ServiceDatabase, &out.ServiceDatabase
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceParameters.
func (in *MySQLSourceParameters) DeepCopy() *MySQLSourceParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourcePasswordObservation) DeepCopyInto(out *MySQLSourcePasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourcePasswordObservation.
func (in *MySQLSourcePasswordObservation) DeepCopy() *MySQLSourcePasswordObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourcePasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourcePasswordParameters) DeepCopyInto(out *MySQLSourcePasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourcePasswordParameters.
func (in *MySQLSourcePasswordParameters) DeepCopy() *MySQLSourcePasswordParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourcePasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionObservation) DeepCopyInto(out *MySQLTargetConnectionObservation) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MySQLTargetConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionObservation.
func (in *MySQLTargetConnectionObservation) DeepCopy() *MySQLTargetConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseObservation) DeepCopyInto(out *MySQLTargetConnectionOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseObservation.
func (in *MySQLTargetConnectionOnPremiseObservation) DeepCopy() *MySQLTargetConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseParameters.
func (in *MySQLTargetConnectionOnPremiseParameters) DeepCopy() *MySQLTargetConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeDisabledObservation.
func (in *MySQLTargetConnectionOnPremiseTLSModeDisabledObservation) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeDisabledParameters.
func (in *MySQLTargetConnectionOnPremiseTLSModeDisabledParameters) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeEnabledObservation.
func (in *MySQLTargetConnectionOnPremiseTLSModeEnabledObservation) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeEnabledParameters.
func (in *MySQLTargetConnectionOnPremiseTLSModeEnabledParameters) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeObservation.
func (in *MySQLTargetConnectionOnPremiseTLSModeObservation) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeParameters.
func (in *MySQLTargetConnectionOnPremiseTLSModeParameters) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionParameters) DeepCopyInto(out *MySQLTargetConnectionParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MySQLTargetConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionParameters.
func (in *MySQLTargetConnectionParameters) DeepCopy() *MySQLTargetConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetObservation) DeepCopyInto(out *MySQLTargetObservation) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MySQLTargetConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MySQLTargetPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLMode != nil {
		in, out := &in.SQLMode, &out.SQLMode
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SkipConstraintChecks != nil {
		in, out := &in.SkipConstraintChecks, &out.SkipConstraintChecks
		*out = new(bool)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetObservation.
func (in *MySQLTargetObservation) DeepCopy() *MySQLTargetObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetParameters) DeepCopyInto(out *MySQLTargetParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MySQLTargetConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MySQLTargetPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLMode != nil {
		in, out := &in.SQLMode, &out.SQLMode
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkipConstraintChecks != nil {
		in, out := &in.SkipConstraintChecks, &out.SkipConstraintChecks
		*out = new(bool)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetParameters.
func (in *MySQLTargetParameters) DeepCopy() *MySQLTargetParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetPasswordObservation) DeepCopyInto(out *MySQLTargetPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetPasswordObservation.
func (in *MySQLTargetPasswordObservation) DeepCopy() *MySQLTargetPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetPasswordParameters) DeepCopyInto(out *MySQLTargetPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetPasswordParameters.
func (in *MySQLTargetPasswordParameters) DeepCopy() *MySQLTargetPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoAuthObservation) DeepCopyInto(out *NoAuthObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoAuthObservation.
func (in *NoAuthObservation) DeepCopy() *NoAuthObservation {
	if in == nil {
		return nil
	}
	out := new(NoAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoAuthParameters) DeepCopyInto(out *NoAuthParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoAuthParameters.
func (in *NoAuthParameters) DeepCopy() *NoAuthParameters {
	if in == nil {
		return nil
	}
	out := new(NoAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTransferSettingsObservation) DeepCopyInto(out *ObjectTransferSettingsObservation) {
	*out = *in
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTransferSettingsObservation.
func (in *ObjectTransferSettingsObservation) DeepCopy() *ObjectTransferSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectTransferSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTransferSettingsParameters) DeepCopyInto(out *ObjectTransferSettingsParameters) {
	*out = *in
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTransferSettingsParameters.
func (in *ObjectTransferSettingsParameters) DeepCopy() *ObjectTransferSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectTransferSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseObservation) DeepCopyInto(out *OnPremiseObservation) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.NativePort != nil {
		in, out := &in.NativePort, &out.NativePort
		*out = new(float64)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]ShardsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]TLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseObservation.
func (in *OnPremiseObservation) DeepCopy() *OnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(OnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseParameters) DeepCopyInto(out *OnPremiseParameters) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.NativePort != nil {
		in, out := &in.NativePort, &out.NativePort
		*out = new(float64)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]ShardsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]TLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseParameters.
func (in *OnPremiseParameters) DeepCopy() *OnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseShardsObservation) DeepCopyInto(out *OnPremiseShardsObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseShardsObservation.
func (in *OnPremiseShardsObservation) DeepCopy() *OnPremiseShardsObservation {
	if in == nil {
		return nil
	}
	out := new(OnPremiseShardsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseShardsParameters) DeepCopyInto(out *OnPremiseShardsParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseShardsParameters.
func (in *OnPremiseShardsParameters) DeepCopy() *OnPremiseShardsParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseShardsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeDisabledObservation) DeepCopyInto(out *OnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeDisabledObservation.
func (in *OnPremiseTLSModeDisabledObservation) DeepCopy() *OnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeDisabledParameters) DeepCopyInto(out *OnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeDisabledParameters.
func (in *OnPremiseTLSModeDisabledParameters) DeepCopy() *OnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeEnabledObservation) DeepCopyInto(out *OnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeEnabledObservation.
func (in *OnPremiseTLSModeEnabledObservation) DeepCopy() *OnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeEnabledParameters) DeepCopyInto(out *OnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeEnabledParameters.
func (in *OnPremiseTLSModeEnabledParameters) DeepCopy() *OnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeObservation) DeepCopyInto(out *OnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]TLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]TLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeObservation.
func (in *OnPremiseTLSModeObservation) DeepCopy() *OnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeParameters) DeepCopyInto(out *OnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]TLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]TLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeParameters.
func (in *OnPremiseTLSModeParameters) DeepCopy() *OnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserObservation) DeepCopyInto(out *ParserObservation) {
	*out = *in
	if in.AuditTrailsV1Parser != nil {
		in, out := &in.AuditTrailsV1Parser, &out.AuditTrailsV1Parser
		*out = make([]AuditTrailsV1ParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.CloudLoggingParser != nil {
		in, out := &in.CloudLoggingParser, &out.CloudLoggingParser
		*out = make([]CloudLoggingParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.JSONParser != nil {
		in, out := &in.JSONParser, &out.JSONParser
		*out = make([]JSONParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TskvParser != nil {
		in, out := &in.TskvParser, &out.TskvParser
		*out = make([]TskvParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserObservation.
func (in *ParserObservation) DeepCopy() *ParserObservation {
	if in == nil {
		return nil
	}
	out := new(ParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserParameters) DeepCopyInto(out *ParserParameters) {
	*out = *in
	if in.AuditTrailsV1Parser != nil {
		in, out := &in.AuditTrailsV1Parser, &out.AuditTrailsV1Parser
		*out = make([]AuditTrailsV1ParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.CloudLoggingParser != nil {
		in, out := &in.CloudLoggingParser, &out.CloudLoggingParser
		*out = make([]CloudLoggingParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.JSONParser != nil {
		in, out := &in.JSONParser, &out.JSONParser
		*out = make([]JSONParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TskvParser != nil {
		in, out := &in.TskvParser, &out.TskvParser
		*out = make([]TskvParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserParameters.
func (in *ParserParameters) DeepCopy() *ParserParameters {
	if in == nil {
		return nil
	}
	out := new(ParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordObservation) DeepCopyInto(out *PasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordObservation.
func (in *PasswordObservation) DeepCopy() *PasswordObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordParameters) DeepCopyInto(out *PasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordParameters.
func (in *PasswordParameters) DeepCopy() *PasswordParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionObservation) DeepCopyInto(out *PostgresSourceConnectionObservation) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]PostgresSourceConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionObservation.
func (in *PostgresSourceConnectionObservation) DeepCopy() *PostgresSourceConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseObservation) DeepCopyInto(out *PostgresSourceConnectionOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseObservation.
func (in *PostgresSourceConnectionOnPremiseObservation) DeepCopy() *PostgresSourceConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseParameters.
func (in *PostgresSourceConnectionOnPremiseParameters) DeepCopy() *PostgresSourceConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeDisabledObservation.
func (in *PostgresSourceConnectionOnPremiseTLSModeDisabledObservation) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeDisabledParameters.
func (in *PostgresSourceConnectionOnPremiseTLSModeDisabledParameters) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeEnabledObservation.
func (in *PostgresSourceConnectionOnPremiseTLSModeEnabledObservation) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeEnabledParameters.
func (in *PostgresSourceConnectionOnPremiseTLSModeEnabledParameters) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeObservation.
func (in *PostgresSourceConnectionOnPremiseTLSModeObservation) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeParameters.
func (in *PostgresSourceConnectionOnPremiseTLSModeParameters) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionParameters) DeepCopyInto(out *PostgresSourceConnectionParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]PostgresSourceConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionParameters.
func (in *PostgresSourceConnectionParameters) DeepCopy() *PostgresSourceConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceObjectTransferSettingsObservation) DeepCopyInto(out *PostgresSourceObjectTransferSettingsObservation) {
	*out = *in
	if in.Cast != nil {
		in, out := &in.Cast, &out.Cast
		*out = new(string)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Constraint != nil {
		in, out := &in.Constraint, &out.Constraint
		*out = new(string)
		**out = **in
	}
	if in.DefaultValues != nil {
		in, out := &in.DefaultValues, &out.DefaultValues
		*out = new(string)
		**out = **in
	}
	if in.FkConstraint != nil {
		in, out := &in.FkConstraint, &out.FkConstraint
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.Sequence != nil {
		in, out := &in.Sequence, &out.Sequence
		*out = new(string)
		**out = **in
	}
	if in.SequenceOwnedBy != nil {
		in, out := &in.SequenceOwnedBy, &out.SequenceOwnedBy
		*out = new(string)
		**out = **in
	}
	if in.SequenceSet != nil {
		in, out := &in.SequenceSet, &out.SequenceSet
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceObjectTransferSettingsObservation.
func (in *PostgresSourceObjectTransferSettingsObservation) DeepCopy() *PostgresSourceObjectTransferSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceObjectTransferSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceObjectTransferSettingsParameters) DeepCopyInto(out *PostgresSourceObjectTransferSettingsParameters) {
	*out = *in
	if in.Cast != nil {
		in, out := &in.Cast, &out.Cast
		*out = new(string)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Constraint != nil {
		in, out := &in.Constraint, &out.Constraint
		*out = new(string)
		**out = **in
	}
	if in.DefaultValues != nil {
		in, out := &in.DefaultValues, &out.DefaultValues
		*out = new(string)
		**out = **in
	}
	if in.FkConstraint != nil {
		in, out := &in.FkConstraint, &out.FkConstraint
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.Sequence != nil {
		in, out := &in.Sequence, &out.Sequence
		*out = new(string)
		**out = **in
	}
	if in.SequenceOwnedBy != nil {
		in, out := &in.SequenceOwnedBy, &out.SequenceOwnedBy
		*out = new(string)
		**out = **in
	}
	if in.SequenceSet != nil {
		in, out := &in.SequenceSet, &out.SequenceSet
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceObjectTransferSettingsParameters.
func (in *PostgresSourceObjectTransferSettingsParameters) DeepCopy() *PostgresSourceObjectTransferSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceObjectTransferSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceObservation) DeepCopyInto(out *PostgresSourceObservation) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]PostgresSourceConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectTransferSettings != nil {
		in, out := &in.ObjectTransferSettings, &out.ObjectTransferSettings
		*out = make([]PostgresSourceObjectTransferSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PostgresSourcePasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceSchema != nil {
		in, out := &in.ServiceSchema, &out.ServiceSchema
		*out = new(string)
		**out = **in
	}
	if in.SlotGigabyteLagLimit != nil {
		in, out := &in.SlotGigabyteLagLimit, &out.SlotGigabyteLagLimit
		*out = new(float64)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceObservation.
func (in *PostgresSourceObservation) DeepCopy() *PostgresSourceObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceParameters) DeepCopyInto(out *PostgresSourceParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]PostgresSourceConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectTransferSettings != nil {
		in, out := &in.ObjectTransferSettings, &out.ObjectTransferSettings
		*out = make([]PostgresSourceObjectTransferSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PostgresSourcePasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSchema != nil {
		in, out := &in.ServiceSchema, &out.ServiceSchema
		*out = new(string)
		**out = **in
	}
	if in.SlotGigabyteLagLimit != nil {
		in, out := &in.SlotGigabyteLagLimit, &out.SlotGigabyteLagLimit
		*out = new(float64)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceParameters.
func (in *PostgresSourceParameters) DeepCopy() *PostgresSourceParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourcePasswordObservation) DeepCopyInto(out *PostgresSourcePasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourcePasswordObservation.
func (in *PostgresSourcePasswordObservation) DeepCopy() *PostgresSourcePasswordObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourcePasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourcePasswordParameters) DeepCopyInto(out *PostgresSourcePasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourcePasswordParameters.
func (in *PostgresSourcePasswordParameters) DeepCopy() *PostgresSourcePasswordParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourcePasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionObservation) DeepCopyInto(out *PostgresTargetConnectionObservation) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]PostgresTargetConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionObservation.
func (in *PostgresTargetConnectionObservation) DeepCopy() *PostgresTargetConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseObservation) DeepCopyInto(out *PostgresTargetConnectionOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseObservation.
func (in *PostgresTargetConnectionOnPremiseObservation) DeepCopy() *PostgresTargetConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseParameters.
func (in *PostgresTargetConnectionOnPremiseParameters) DeepCopy() *PostgresTargetConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeDisabledObservation.
func (in *PostgresTargetConnectionOnPremiseTLSModeDisabledObservation) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeDisabledParameters.
func (in *PostgresTargetConnectionOnPremiseTLSModeDisabledParameters) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeEnabledObservation.
func (in *PostgresTargetConnectionOnPremiseTLSModeEnabledObservation) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeEnabledParameters.
func (in *PostgresTargetConnectionOnPremiseTLSModeEnabledParameters) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeObservation.
func (in *PostgresTargetConnectionOnPremiseTLSModeObservation) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeParameters.
func (in *PostgresTargetConnectionOnPremiseTLSModeParameters) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionParameters) DeepCopyInto(out *PostgresTargetConnectionParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]PostgresTargetConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionParameters.
func (in *PostgresTargetConnectionParameters) DeepCopy() *PostgresTargetConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetObservation) DeepCopyInto(out *PostgresTargetObservation) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]PostgresTargetConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PostgresTargetPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetObservation.
func (in *PostgresTargetObservation) DeepCopy() *PostgresTargetObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetParameters) DeepCopyInto(out *PostgresTargetParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]PostgresTargetConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PostgresTargetPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetParameters.
func (in *PostgresTargetParameters) DeepCopy() *PostgresTargetParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetPasswordObservation) DeepCopyInto(out *PostgresTargetPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetPasswordObservation.
func (in *PostgresTargetPasswordObservation) DeepCopy() *PostgresTargetPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetPasswordParameters) DeepCopyInto(out *PostgresTargetPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetPasswordParameters.
func (in *PostgresTargetPasswordParameters) DeepCopy() *PostgresTargetPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SaslObservation) DeepCopyInto(out *SaslObservation) {
	*out = *in
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]SaslPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SaslObservation.
func (in *SaslObservation) DeepCopy() *SaslObservation {
	if in == nil {
		return nil
	}
	out := new(SaslObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SaslParameters) DeepCopyInto(out *SaslParameters) {
	*out = *in
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]SaslPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SaslParameters.
func (in *SaslParameters) DeepCopy() *SaslParameters {
	if in == nil {
		return nil
	}
	out := new(SaslParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SaslPasswordObservation) DeepCopyInto(out *SaslPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SaslPasswordObservation.
func (in *SaslPasswordObservation) DeepCopy() *SaslPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(SaslPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SaslPasswordParameters) DeepCopyInto(out *SaslPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SaslPasswordParameters.
func (in *SaslPasswordParameters) DeepCopy() *SaslPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(SaslPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerAutoObservation) DeepCopyInto(out *SerializerAutoObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerAutoObservation.
func (in *SerializerAutoObservation) DeepCopy() *SerializerAutoObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerAutoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerAutoParameters) DeepCopyInto(out *SerializerAutoParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerAutoParameters.
func (in *SerializerAutoParameters) DeepCopy() *SerializerAutoParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerAutoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerDebeziumObservation) DeepCopyInto(out *SerializerDebeziumObservation) {
	*out = *in
	if in.SerializerParameters != nil {
		in, out := &in.SerializerParameters, &out.SerializerParameters
		*out = make([]SerializerParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerDebeziumObservation.
func (in *SerializerDebeziumObservation) DeepCopy() *SerializerDebeziumObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerDebeziumObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerDebeziumParameters) DeepCopyInto(out *SerializerDebeziumParameters) {
	*out = *in
	if in.SerializerParameters != nil {
		in, out := &in.SerializerParameters, &out.SerializerParameters
		*out = make([]SerializerParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerDebeziumParameters.
func (in *SerializerDebeziumParameters) DeepCopy() *SerializerDebeziumParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerDebeziumParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerJSONObservation) DeepCopyInto(out *SerializerJSONObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerJSONObservation.
func (in *SerializerJSONObservation) DeepCopy() *SerializerJSONObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerJSONObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerJSONParameters) DeepCopyInto(out *SerializerJSONParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerJSONParameters.
func (in *SerializerJSONParameters) DeepCopy() *SerializerJSONParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerJSONParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerObservation) DeepCopyInto(out *SerializerObservation) {
	*out = *in
	if in.SerializerAuto != nil {
		in, out := &in.SerializerAuto, &out.SerializerAuto
		*out = make([]SerializerAutoParameters, len(*in))
		copy(*out, *in)
	}
	if in.SerializerDebezium != nil {
		in, out := &in.SerializerDebezium, &out.SerializerDebezium
		*out = make([]SerializerDebeziumObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SerializerJSON != nil {
		in, out := &in.SerializerJSON, &out.SerializerJSON
		*out = make([]SerializerJSONParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerObservation.
func (in *SerializerObservation) DeepCopy() *SerializerObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerParameters) DeepCopyInto(out *SerializerParameters) {
	*out = *in
	if in.SerializerAuto != nil {
		in, out := &in.SerializerAuto, &out.SerializerAuto
		*out = make([]SerializerAutoParameters, len(*in))
		copy(*out, *in)
	}
	if in.SerializerDebezium != nil {
		in, out := &in.SerializerDebezium, &out.SerializerDebezium
		*out = make([]SerializerDebeziumParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SerializerJSON != nil {
		in, out := &in.SerializerJSON, &out.SerializerJSON
		*out = make([]SerializerJSONParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerParameters.
func (in *SerializerParameters) DeepCopy() *SerializerParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerParametersObservation) DeepCopyInto(out *SerializerParametersObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerParametersObservation.
func (in *SerializerParametersObservation) DeepCopy() *SerializerParametersObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerParametersParameters) DeepCopyInto(out *SerializerParametersParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerParametersParameters.
func (in *SerializerParametersParameters) DeepCopy() *SerializerParametersParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.ClickhouseSource != nil {
		in, out := &in.ClickhouseSource, &out.ClickhouseSource
		*out = make([]ClickhouseSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClickhouseTarget != nil {
		in, out := &in.ClickhouseTarget, &out.ClickhouseTarget
		*out = make([]ClickhouseTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaSource != nil {
		in, out := &in.KafkaSource, &out.KafkaSource
		*out = make([]KafkaSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaTarget != nil {
		in, out := &in.KafkaTarget, &out.KafkaTarget
		*out = make([]KafkaTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoSource != nil {
		in, out := &in.MongoSource, &out.MongoSource
		*out = make([]MongoSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoTarget != nil {
		in, out := &in.MongoTarget, &out.MongoTarget
		*out = make([]MongoTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MySQLSource != nil {
		in, out := &in.MySQLSource, &out.MySQLSource
		*out = make([]MySQLSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MySQLTarget != nil {
		in, out := &in.MySQLTarget, &out.MySQLTarget
		*out = make([]MySQLTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresSource != nil {
		in, out := &in.PostgresSource, &out.PostgresSource
		*out = make([]PostgresSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresTarget != nil {
		in, out := &in.PostgresTarget, &out.PostgresTarget
		*out = make([]PostgresTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdbSource != nil {
		in, out := &in.YdbSource, &out.YdbSource
		*out = make([]YdbSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdbTarget != nil {
		in, out := &in.YdbTarget, &out.YdbTarget
		*out = make([]YdbTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.ClickhouseSource != nil {
		in, out := &in.ClickhouseSource, &out.ClickhouseSource
		*out = make([]ClickhouseSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClickhouseTarget != nil {
		in, out := &in.ClickhouseTarget, &out.ClickhouseTarget
		*out = make([]ClickhouseTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaSource != nil {
		in, out := &in.KafkaSource, &out.KafkaSource
		*out = make([]KafkaSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaTarget != nil {
		in, out := &in.KafkaTarget, &out.KafkaTarget
		*out = make([]KafkaTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoSource != nil {
		in, out := &in.MongoSource, &out.MongoSource
		*out = make([]MongoSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoTarget != nil {
		in, out := &in.MongoTarget, &out.MongoTarget
		*out = make([]MongoTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MySQLSource != nil {
		in, out := &in.MySQLSource, &out.MySQLSource
		*out = make([]MySQLSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MySQLTarget != nil {
		in, out := &in.MySQLTarget, &out.MySQLTarget
		*out = make([]MySQLTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresSource != nil {
		in, out := &in.PostgresSource, &out.PostgresSource
		*out = make([]PostgresSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresTarget != nil {
		in, out := &in.PostgresTarget, &out.PostgresTarget
		*out = make([]PostgresTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdbSource != nil {
		in, out := &in.YdbSource, &out.YdbSource
		*out = make([]YdbSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdbTarget != nil {
		in, out := &in.YdbTarget, &out.YdbTarget
		*out = make([]YdbTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardingObservation) DeepCopyInto(out *ShardingObservation) {
	*out = *in
	if in.ColumnValueHash != nil {
		in, out := &in.ColumnValueHash, &out.ColumnValueHash
		*out = make([]ColumnValueHashObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransferID != nil {
		in, out := &in.TransferID, &out.TransferID
		*out = make([]TransferIDParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardingObservation.
func (in *ShardingObservation) DeepCopy() *ShardingObservation {
	if in == nil {
		return nil
	}
	out := new(ShardingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardingParameters) DeepCopyInto(out *ShardingParameters) {
	*out = *in
	if in.ColumnValueHash != nil {
		in, out := &in.ColumnValueHash, &out.ColumnValueHash
		*out = make([]ColumnValueHashParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransferID != nil {
		in, out := &in.TransferID, &out.TransferID
		*out = make([]TransferIDParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardingParameters.
func (in *ShardingParameters) DeepCopy() *ShardingParameters {
	if in == nil {
		return nil
	}
	out := new(ShardingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardsObservation) DeepCopyInto(out *ShardsObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardsObservation.
func (in *ShardsObservation) DeepCopy() *ShardsObservation {
	if in == nil {
		return nil
	}
	out := new(ShardsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardsParameters) DeepCopyInto(out *ShardsParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardsParameters.
func (in *ShardsParameters) DeepCopy() *ShardsParameters {
	if in == nil {
		return nil
	}
	out := new(ShardsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeDisabledObservation) DeepCopyInto(out *TLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeDisabledObservation.
func (in *TLSModeDisabledObservation) DeepCopy() *TLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(TLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeDisabledParameters) DeepCopyInto(out *TLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeDisabledParameters.
func (in *TLSModeDisabledParameters) DeepCopy() *TLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(TLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeEnabledObservation) DeepCopyInto(out *TLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeEnabledObservation.
func (in *TLSModeEnabledObservation) DeepCopy() *TLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(TLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeEnabledParameters) DeepCopyInto(out *TLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeEnabledParameters.
func (in *TLSModeEnabledParameters) DeepCopy() *TLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(TLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeObservation) DeepCopyInto(out *TLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]DisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]EnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeObservation.
func (in *TLSModeObservation) DeepCopy() *TLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(TLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeParameters) DeepCopyInto(out *TLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]DisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]EnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeParameters.
func (in *TLSModeParameters) DeepCopy() *TLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(TLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicObservation) DeepCopyInto(out *TopicObservation) {
	*out = *in
	if in.SaveTxOrder != nil {
		in, out := &in.SaveTxOrder, &out.SaveTxOrder
		*out = new(bool)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicObservation.
func (in *TopicObservation) DeepCopy() *TopicObservation {
	if in == nil {
		return nil
	}
	out := new(TopicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicParameters) DeepCopyInto(out *TopicParameters) {
	*out = *in
	if in.SaveTxOrder != nil {
		in, out := &in.SaveTxOrder, &out.SaveTxOrder
		*out = new(bool)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicParameters.
func (in *TopicParameters) DeepCopy() *TopicParameters {
	if in == nil {
		return nil
	}
	out := new(TopicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSettingsObservation) DeepCopyInto(out *TopicSettingsObservation) {
	*out = *in
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = make([]TopicObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicPrefix != nil {
		in, out := &in.TopicPrefix, &out.TopicPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSettingsObservation.
func (in *TopicSettingsObservation) DeepCopy() *TopicSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TopicSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSettingsParameters) DeepCopyInto(out *TopicSettingsParameters) {
	*out = *in
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = make([]TopicParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicPrefix != nil {
		in, out := &in.TopicPrefix, &out.TopicPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSettingsParameters.
func (in *TopicSettingsParameters) DeepCopy() *TopicSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TopicSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Transfer) DeepCopyInto(out *Transfer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Transfer.
func (in *Transfer) DeepCopy() *Transfer {
	if in == nil {
		return nil
	}
	out := new(Transfer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Transfer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferIDObservation) DeepCopyInto(out *TransferIDObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferIDObservation.
func (in *TransferIDObservation) DeepCopy() *TransferIDObservation {
	if in == nil {
		return nil
	}
	out := new(TransferIDObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferIDParameters) DeepCopyInto(out *TransferIDParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferIDParameters.
func (in *TransferIDParameters) DeepCopy() *TransferIDParameters {
	if in == nil {
		return nil
	}
	out := new(TransferIDParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferList) DeepCopyInto(out *TransferList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Transfer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferList.
func (in *TransferList) DeepCopy() *TransferList {
	if in == nil {
		return nil
	}
	out := new(TransferList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransferList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferObservation) DeepCopyInto(out *TransferObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnCreateActivateMode != nil {
		in, out := &in.OnCreateActivateMode, &out.OnCreateActivateMode
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Warning != nil {
		in, out := &in.Warning, &out.Warning
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferObservation.
func (in *TransferObservation) DeepCopy() *TransferObservation {
	if in == nil {
		return nil
	}
	out := new(TransferObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferParameters) DeepCopyInto(out *TransferParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnCreateActivateMode != nil {
		in, out := &in.OnCreateActivateMode, &out.OnCreateActivateMode
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceIDRef != nil {
		in, out := &in.SourceIDRef, &out.SourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIDSelector != nil {
		in, out := &in.SourceIDSelector, &out.SourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.TargetIDRef != nil {
		in, out := &in.TargetIDRef, &out.TargetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetIDSelector != nil {
		in, out := &in.TargetIDSelector, &out.TargetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferParameters.
func (in *TransferParameters) DeepCopy() *TransferParameters {
	if in == nil {
		return nil
	}
	out := new(TransferParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferSpec) DeepCopyInto(out *TransferSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferSpec.
func (in *TransferSpec) DeepCopy() *TransferSpec {
	if in == nil {
		return nil
	}
	out := new(TransferSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferStatus) DeepCopyInto(out *TransferStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferStatus.
func (in *TransferStatus) DeepCopy() *TransferStatus {
	if in == nil {
		return nil
	}
	out := new(TransferStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformerObservation) DeepCopyInto(out *TransformerObservation) {
	*out = *in
	if in.BufferFlushInterval != nil {
		in, out := &in.BufferFlushInterval, &out.BufferFlushInterval
		*out = new(string)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(string)
		**out = **in
	}
	if in.CloudFunction != nil {
		in, out := &in.CloudFunction, &out.CloudFunction
		*out = new(string)
		**out = **in
	}
	if in.InvocationTimeout != nil {
		in, out := &in.InvocationTimeout, &out.InvocationTimeout
		*out = new(string)
		**out = **in
	}
	if in.NumberOfRetries != nil {
		in, out := &in.NumberOfRetries, &out.NumberOfRetries
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformerObservation.
func (in *TransformerObservation) DeepCopy() *TransformerObservation {
	if in == nil {
		return nil
	}
	out := new(TransformerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformerParameters) DeepCopyInto(out *TransformerParameters) {
	*out = *in
	if in.BufferFlushInterval != nil {
		in, out := &in.BufferFlushInterval, &out.BufferFlushInterval
		*out = new(string)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(string)
		**out = **in
	}
	if in.CloudFunction != nil {
		in, out := &in.CloudFunction, &out.CloudFunction
		*out = new(string)
		**out = **in
	}
	if in.InvocationTimeout != nil {
		in, out := &in.InvocationTimeout, &out.InvocationTimeout
		*out = new(string)
		**out = **in
	}
	if in.NumberOfRetries != nil {
		in, out := &in.NumberOfRetries, &out.NumberOfRetries
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformerParameters.
func (in *TransformerParameters) DeepCopy() *TransformerParameters {
	if in == nil {
		return nil
	}
	out := new(TransformerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaObservation) DeepCopyInto(out *TskvParserDataSchemaObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]DataSchemaFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaObservation.
func (in *TskvParserDataSchemaObservation) DeepCopy() *TskvParserDataSchemaObservation {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaParameters) DeepCopyInto(out *TskvParserDataSchemaParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]DataSchemaFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaParameters.
func (in *TskvParserDataSchemaParameters) DeepCopy() *TskvParserDataSchemaParameters {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserObservation) DeepCopyInto(out *TskvParserObservation) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]TskvParserDataSchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserObservation.
func (in *TskvParserObservation) DeepCopy() *TskvParserObservation {
	if in == nil {
		return nil
	}
	out := new(TskvParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserParameters) DeepCopyInto(out *TskvParserParameters) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]TskvParserDataSchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserParameters.
func (in *TskvParserParameters) DeepCopy() *TskvParserParameters {
	if in == nil {
		return nil
	}
	out := new(TskvParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdbSourceObservation) DeepCopyInto(out *YdbSourceObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdbSourceObservation.
func (in *YdbSourceObservation) DeepCopy() *YdbSourceObservation {
	if in == nil {
		return nil
	}
	out := new(YdbSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdbSourceParameters) DeepCopyInto(out *YdbSourceParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SaKeyContentSecretRef != nil {
		in, out := &in.SaKeyContentSecretRef, &out.SaKeyContentSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdbSourceParameters.
func (in *YdbSourceParameters) DeepCopy() *YdbSourceParameters {
	if in == nil {
		return nil
	}
	out := new(YdbSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdbTargetObservation) DeepCopyInto(out *YdbTargetObservation) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdbTargetObservation.
func (in *YdbTargetObservation) DeepCopy() *YdbTargetObservation {
	if in == nil {
		return nil
	}
	out := new(YdbTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdbTargetParameters) DeepCopyInto(out *YdbTargetParameters) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SaKeyContentSecretRef != nil {
		in, out := &in.SaKeyContentSecretRef, &out.SaKeyContentSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdbTargetParameters.
func (in *YdbTargetParameters) DeepCopy() *YdbTargetParameters {
	if in == nil {
		return nil
	}
	out := new(YdbTargetParameters)
	in.DeepCopyInto(out)
	return out
}
